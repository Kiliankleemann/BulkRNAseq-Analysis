
######--------KEGG & GO Term analysis--------########
## https://www.genome.jp/kegg/catalog/org_list.html 
## search_kegg_organism('Human', by='kegg_code')
BiocManager::install('stringr')
BiocManager::install('org.Hs.eg.db')
BiocManager::install('org.Mm.eg.db')

library(org.Hs.eg.db)
library(org.Mm.eg.db)
library(clusterProfiler)
library(limma)
library(openxlsx)
library(dplyr)
library(tidyverse)
library(data.table)
library(stringr)


data <- read.xlsx('SK5ABP/results/P2_classical_data_clustergenes.xlsx')
sig_data <- read.xlsx('SK5ABP/results/P2_classical_data_DEGene_counts_pval05.xlsx')

cluster5_genes <- data %>% filter(cluster == '5') %>% pull('gene')

#KEGG Pathway analysis  
#Filter up or downregulated genes fot pathway analysis
#up_DEG <- sig_res %>% filter(log2FoldChange > 0) %>% pull(gene)
up_DEG <- mapIds(org.Hs.eg.db, cluster5_genes, 'ENTREZID', 'SYMBOL')
keg <- kegga(up_DEG, species="Hs")
keg <- keg%>%filter(P.DE <0.05)%>%
  arrange(desc(DE))
keg$log_p <- -log10(keg$P.DE)
keg$'-log(p-value)' <- -log10(keg$P.DE)
setnames(keg, "DE", "Count")
keg

## theme details
lineWidth = 1
pointSize = 15
theme <- theme(
  text = element_text(size = pointSize, colour = "black"),
  rect = element_blank(),
  line = element_line(size = lineWidth, colour = "black"),
  plot.title  = element_text(color="black", size = pointSize),
  axis.title  = element_text(size = pointSize * 0.8, colour = "black"),
  axis.text.x  = element_blank(),
  axis.text.y  = element_text(size = pointSize * 0.8, colour = "black"),
  axis.ticks.x = element_blank(),
  panel.grid.major = element_blank(),
  panel.grid.minor = element_blank(),
  legend.title = element_text(size = pointSize * 0.7, colour = "black"),
  legend.text = element_text(size = pointSize * 0.4, colour = "black"),
  legend.key.height = unit(0.2, "cm"),
  legend.key.width = unit(0.2, "cm"),
  axis.line = element_line(size = lineWidth, colour = "black"),
  plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))

dotplot <- ggplot(keg[c(1,2,3,4,5,6,7,8,9,10,11,12),],  # you can replace the numbers to the row number of pathway of your interest
       aes(x = 1, y = reorder(Pathway, log_p))) + 
  geom_point(aes(size = Count, color = log_p)) +
  theme_bw(base_size = 14) +
  theme +
  scale_colour_gradient2(limits=c(0, 7), low="navyblue", mid="white", high = "dodgerblue") +
  ylab(NULL) +
  xlab(NULL) +
  labs(title = str_wrap("KEGG pathway enrichment", 20))
dotplot

ggsave(paste0('SK5ABP/plots/P2_classical_data_clustergenes','KEGG_pathway', '_' ,'cluster1','.pdf'),
       dotplot,
       dpi = 300)



#GO Pathway analysis
#One of "MF", "BP", and "CC" subontologies
# up_DEG_genes <- sig_res %>% filter(log2FoldChange > 0) %>% pull('gene')
# up_DEG_genes <- mapIds(org.Mm.eg.db, up_DEG_genes, 'ENTREZID', 'SYMBOL')
# up_DEG_Log2FC <-  sig_res %>% filter(log2FoldChange > 0) %>% pull('FoldChange')
# combined_up_DEG <-as.data.frame(cbind(up_DEG_genes,up_DEG_Log2FC))
# names(up_DEG_Log2FC) = up_DEG_genes


go <- enrichGO(gene = up_DEG,
               'org.Hs.eg.db',
               keyType = "ENTREZID",
               ont = "BP",
               pvalueCutoff = 0.05,
               pAdjustMethod = "BH")
p1 <- as.data.frame(go@result) %>% filter(pvalue < 0.06)
p1$log_p <- -log10(p1$pvalue)

dotplot_GO <- ggplot(p1[c(1,2,3,4,5,6,7,8,9,10,11,12),],  # you can replace the numbers to the row number of pathway of your interest
                  aes(x = 1, y = reorder(Description, log_p))) + 
  geom_point(aes(size = Count, color = log_p)) +
  theme_bw(base_size = 14) +
  theme +
  scale_colour_gradient2(limits=c(0, 4), low="navyblue", mid="white", high = "purple") +
  ylab(NULL) +
  xlab(NULL) +
  labs(title = str_wrap("GO pathway enrichment", 20))
dotplot_GO

p2 <- dotplot(go, showCategory = 10, font.size=10)
p2


ggsave(paste0('SK5ABP/plots/P2_classical_data_clustergenes','GO_pathway', '_' ,'cluster5','.pdf'),
       dotplot_GO,
       dpi = 300)

file_prefix_go = 'antigen_processing_presentation'
pathway_data <- AnnotationDbi::select(org.Hs.eg.db, keytype="GOALL", keys='GO:0045088', columns = 'SYMBOL')
pathway_genes <- pathway_data %>% pull (SYMBOL)

pathway_genes_heatmap <- as.data.frame(sig_data %>% filter(gene %in% c(pathway_genes)))
write.xlsx(pathway_genes_heatmap, paste0('results/',file_prefix, file_prefix_go,'_heatmap.xlsx'))

install.packages('ggnewscale')
library(ggnewscale)



## convert gene ID to Symbol
file_prefix_cnet = 'go_interferon_antigen'
go_interferon_antigen <- ggo %>% filter(ID %in% c('GO:0019882','GO:0060337'))
edox <- setReadable(go_interferon_antigen, 'org.Mm.eg.db', 'ENTREZID')
p1 <- cnetplot(go_interferon_antigen, 
               foldChange= up_DEG_Log2FC, 
               cex_label_category = 1, 
               cex_label_gene = 1,
)
p1 + scale_colour_gradient(limits=c(0, 1.3), low="white", high = "red")
dev.off()
pdf(file = paste0('plots/heatmap_', file_prefix,file_prefix_cnet, '_pval05.pdf'), pointsize = 10, height = 10, width = 15)
p1
dev.off()
## categorySize can be scaled by 'pvalue' or 'geneNum'
p2 <- cnetplot(edox, categorySize="pvalue", foldChange= up_DEG_Log2FC)
p3 <- cnetplot(edox, foldChange=up_DEG_Log2FC, circular = TRUE, colorEdge = TRUE) 
cowplot::plot_grid(p1, p2, p3, ncol=3, labels=LETTERS[1:3], rel_widths=c(.8, .8, 1.2))
p3
